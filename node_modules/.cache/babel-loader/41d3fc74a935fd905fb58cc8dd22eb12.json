{"ast":null,"code":"var _jsxFileName = \"H:\\\\REACT\\\\vidly\\\\src\\\\component\\\\movies.jsx\";\nimport React, { Component } from 'react';\nimport MoviesTable from \"./moviesTable\";\nimport ListGroup from './common/ListGroup';\nimport Pignation from './common/pagination';\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { paginate } from '../utils/paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      genres: [],\n      currentPage: 1,\n      pageSize: 4\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGereSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      name: \" All Geners\"\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  } // handle events\n\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      movies: allMovies\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no movies in database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 32\n    }, this);\n    const filtered = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies; // create new list of movie to keep the original one untouched throug pagination ,filtering and search\n\n    const movies = paginate(filtered, currentPage, pageSize);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: this.state.genres,\n          selectedItem: this.state.selectedGenre,\n          onItemSelect: this.handleGereSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", filtered.length, \" movies in database\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          onLike: this.handleLike,\n          onDelete: this.handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Pignation, {\n          itemCount: filtered.length,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          onPageChange: this.handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["H:/REACT/vidly/src/component/movies.jsx"],"names":["React","Component","MoviesTable","ListGroup","Pignation","getMovies","getGenres","paginate","Movies","state","movies","genres","currentPage","pageSize","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","page","handleGereSelect","genre","selectedGenre","componentDidMount","name","render","length","count","allMovies","filtered"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MoviesTable from \"./moviesTable\"\r\nimport ListGroup from './common/ListGroup'\r\nimport Pignation from './common/pagination';\r\nimport {getMovies} from \"../services/fakeMovieService\";\r\nimport {getGenres }from \"../services/fakeGenreService\"\r\nimport {paginate }from '../utils/paginate'\r\n\r\n\r\n\r\nclass Movies extends Component {\r\n    state = { \r\n        movies :[],\r\n        genres:[],\r\n        currentPage:1,\r\n        pageSize:4\r\n     }\r\n\r\n\r\n     componentDidMount(){\r\n         const genres =[ {name:\" All Geners\"},...getGenres()]\r\n         this.setState({movies : getMovies(), genres})\r\n     }\r\n\r\n     // handle events\r\n     handleDelete =(movie)=>{\r\n         const movies = this.state.movies.filter(m => m._id !== movie._id);\r\n         this.setState({movies})\r\n\r\n\r\n     }\r\n     handleLike =(movie)=>{\r\n        const movies =[...this.state.movies];\r\n        const index =movies.indexOf(movie);\r\n        movies[index] ={...movies[index]}\r\n        movies[index].liked =!movies[index].liked ;\r\n        this.setState({movies})\r\n     }\r\n     handlePageChange =(page)=>{\r\n        this.setState({currentPage: page})\r\n     }\r\n     handleGereSelect = genre =>{\r\n         \r\n         this.setState({selectedGenre :genre ,currentPage:1})\r\n     }\r\n\r\n    \r\n    render() \r\n    { \r\n\r\n        const {length : count} =this.state.movies;\r\n        const {pageSize ,currentPage,selectedGenre ,movies :allMovies}= this.state\r\n        if (count=== 0 ) return<p>There are no movies in database</p>;\r\n\r\n        const filtered = selectedGenre &&selectedGenre._id\r\n         ? allMovies.filter(m =>m.genre._id ===selectedGenre._id)\r\n         :allMovies;\r\n        // create new list of movie to keep the original one untouched throug pagination ,filtering and search\r\n        const movies = paginate(filtered,currentPage,pageSize)\r\n\r\n        return (<div  className=\"row\">\r\n\r\n\r\n            <div className=\"col-3\">\r\n                <ListGroup \r\n                 items ={this.state.genres}\r\n                 selectedItem ={this.state.selectedGenre}\r\n                 onItemSelect={this.handleGereSelect} \r\n                 />\r\n            </div>\r\n\r\n            <div className=\"col\">\r\n            <p>Showing {filtered.length} movies in database</p>\r\n               <MoviesTable \r\n               movies={movies}\r\n               onLike ={this.handleLike}\r\n               onDelete ={this.handleDelete}\r\n               />\r\n        <Pignation \r\n         itemCount ={filtered.length} \r\n         pageSize={pageSize}\r\n         currentPage={currentPage}\r\n         onPageChange = {this.handlePageChange} />\r\n            </div>\r\n\r\n        </div>)\r\n     \r\n    }\r\n}export default Movies;"]},"metadata":{},"sourceType":"module"}